// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Org {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  address   String
  city      String
  state     String
  whatsapp  String
  pets      Pet[] // Relacionamento com os pets cadastrados pela ORG
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[] // Relacionamento com os usuários associados à ORG
}

model User {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  password_hash String
  role          Role     @default(ADOPTER) // Definição do papel do usuário para RBAC
  orgId         String? // Campo opcional para associar o usuário a uma ORG
  org           Org?     @relation(fields: [orgId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Pet {
  id          String   @id @default(uuid())
  name        String
  age         Int
  description String
  species     String // Espécie do pet, exemplo: "Cachorro", "Gato", etc.
  breed       String? // Raça do pet (opcional)
  size        Size // Porte do pet, exemplo: "Pequeno", "Médio", "Grande"
  color       String? // Cor do pet (opcional)
  city        String // Cidade do pet (para filtro obrigatório)
  adopted     Boolean  @default(false) // Indica se o pet foi adotado
  orgId       String
  org         Org      @relation(fields: [orgId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  ADMIN // Acesso administrativo, controle total do sistema
  ORG_MEMBER // Membro da organização, pode gerenciar pets
  ADOPTER // Usuário interessado em adotar pets, acesso limitado
}

enum Size {
  SMALL
  MEDIUM
  LARGE
}
